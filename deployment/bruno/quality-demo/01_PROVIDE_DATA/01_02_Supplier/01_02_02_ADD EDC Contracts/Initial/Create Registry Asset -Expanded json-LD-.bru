meta {
  name: Create Registry Asset -Expanded json-LD-
  type: http
  seq: 1
}

post {
  url: {{SUPPLIER_EDC}}/{{MANAGEMENT_PATH}}/v3/assets
  body: json
  auth: apikey
}

auth:apikey {
  key: X-API-KEY
  value: {{SUPPLIER_EDC_API_KEY}}
  placement: header
}

body:json {
  {
    "@context": {
      "edc": "https://w3id.org/edc/v0.0.1/ns/", // alternative can use @vocab
      "cx-taxo": "https://w3id.org/catenax/taxonomy#",
      "cx-common": "https://w3id.org/catenax/ontology/common#",
      "dct": "http://purl.org/dc/terms/"
      // did not put the aas-semantics as I imply bundling per partner and material
    },
    "@id": "{{SUPPLIER_REGISTRY_ASSET_ID}}",
    "edc:properties": {
      "dct:type": {
          "@id": "cx-taxo:DigitalTwinRegistry"
      },
      "cx-common:version": "3.0"
    },
    "edc:dataAddress": {
          "edc:proxyPath": "true",
          "edc:proxyBody": "true",
          "edc:proxyMethod": "false",
          "edc:type": "HttpData",
          "edc:proxyQueryParams": "true",
          "edc:baseUrl": "{{SUPPLIER_DTR_PROXY_EXT}}" // backend-url with prefix
    },
    "edc:privateProperties": {
      "partner": "{{CUSTOMER_BPNL}}"
    }
  }
}

tests {
  test("Status code is 201", function () {
      expect(res.getStatus()).to.equal(200);
  });
}
